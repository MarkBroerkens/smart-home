# docker-compose file for running paperless from the Docker Hub.
# This file contains everything paperless needs to run.
# Paperless supports amd64, arm and arm64 hardware.
#
# All compose files of paperless configure paperless in the following way:
#
# - Paperless is (re)started on system boot, if it was running before shutdown.
# - Docker volumes for storing data are managed by Docker.
# - Folders for importing and exporting files are created in the same directory
#   as this file and mounted to the correct folders inside the container.
# - Paperless listens on port 8010.
#
#
# To install and update paperless with this file, do the following:
#
# - Open portainer Stacks list and click 'Add stack'
# - Paste the contents of this file and assign a name, e.g. 'Paperless'
# - Create volumes: data, export, media, consume
# - Click 'Deploy the stack' and wait for it to be deployed
# - Open the list of containers, select paperless_webserver_1
# - Click 'Console' and then 'Connect' to open the command line inside the container
# - Run 'python3 manage.py createsuperuser' to create a user
# - Exit the console
#
# For more extensive installation and update instructions, refer to the
# documentation.

version: "2"
services:
  broker:
    image: redis:6.0
    restart: unless-stopped

  webserver:
    image: jonaswinkler/paperless-ng:latest
    restart: unless-stopped
    depends_on:
      - broker
    ports:
      - 8010:8000
    volumes:
      - data:/usr/src/paperless/data
      - export:/usr/src/paperless/export
      - media:/usr/src/paperless/media
      - ${PAPERLESS_INBOX_PATH:?Undefined Env-Variable}:/usr/src/paperless/consume
    environment:
      PAPERLESS_REDIS: redis://broker:6379
      USERMAP_UID: 1000
      USERMAP_GID: 100
      PAPERLESS_TIME_ZONE: Europe/Berlin
      PAPERLESS_OCR_LANGUAGE: deu
      PAPERLESS_FILENAME_FORMAT: "{created_year}/{document_type}/{correspondent}/{created}_{title}"
      PAPERLESS_IGNORE_DATES: 02.07.1973,02.07.1975,03.02.2015,26.07.2019
      PAPERLESS_CONSUMER_RECURSIVE: 1
      
      
volumes:
  data:
  export:
  media:
